name: Version Check

on:
  workflow_call:
    inputs:
      optional_dependencies:
        required: false
        type: string
        default: ""

jobs:
  version_check:
    runs-on: ubuntu-latest
    if: github.ref != 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
      with:
        ref: 'main'
    - name: Run pytest setup
      uses: AFMC-MAJCOM/ci_python/.github/actions/pytest-setup@main
      with:
        optional_dependencies: ${{ inputs.optional_dependencies  }}
    - name: Retrieve Main Version
      id: get_main
      run: |
        echo "PROJECT_VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_ENV
        echo "PROJECT_VERSION=${{ env.PROJECT_VERSION }}"
    - uses: actions/checkout@v3
    - name: Retrieve Branch Version
      id: get_branch
      run: |
        echo "MERGE_VERSION=$(python -c "import tomli; print(tomli.load(open('pyproject.toml', 'rb'))['project']['version'])")" >> $GITHUB_ENV
        echo "MERGE_VERSION=${{ env.MERGE_VERSION }}"
    - name: Checkout ci_python repository
      uses: actions/checkout@v3
      with:
        repository: AFMC-MAJCOM/ci_python
        path: ci_python
        ref: OPAL-943
    - name: Version Comparison
      run: python ci_python/.github/workflows/verify_version.py "${{ inputs.PROJECT_VERSION }}" "${{ env.MERGE_VERSION }}"
